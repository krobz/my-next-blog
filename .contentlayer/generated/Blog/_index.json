[
  {
    "title": "My Journey in Data Structures, Algorithms, and LeetCode (Part I)",
    "date": "2025-05-02T00:00:00.000Z",
    "tags": [
      "Algorithm",
      "LeetCode",
      "Personal"
    ],
    "lastmod": "2025-05-02T00:00:00.000Z",
    "draft": false,
    "summary": "Reflecting on my personal journey in data structures, algorithms, and LeetCode—from early competitions in NOIP to rediscovering my passion for programming and competitive challenges years later.",
    "images": [
      "/static/images/twitter-card.png"
    ],
    "body": {
      "raw": "\n## Introduction\n\nMy journey with data structures, algorithms, and competitive programming started quite early and took several interesting turns over the years. Reflecting on these experiences helps me appreciate the growth and changes in my approach and passion.\n\n## Early Days and NOIP\n\nMy journey began around 2009, during secondary school. Our school organized a science festival requiring every student to pick a project. I chose the National Olympiad in Informatics in Provinces (NOIP), Basic Division. At the time, I had never studied data structures or algorithms. My first exposure came through a C programming textbook written by Haoqiang Tan, a prominent educator. Looking back ten years later, I realized the book was quite outdated and unprofessional by modern standards.\n\nFortunately, my father, who majored in computer science, quickly guided me through the basics. I still vividly remember him teaching me fundamental C syntax using a whiteboard. In my third year of secondary school, I participated in NOIP Basic Division, achieving a high score in the first round, thus qualifying for the finals in a bigger city three hours away. Despite minimal preparation, I managed a small prize in the second round—a hands-on competition where we needed to solve four problems within a limited time. Due to my lack of practice, even handling file input/output posed challenges.\n\n## Advanced Division and High School\n\nDuring the summer after secondary school graduation, my father connected me with an IT teacher from my future high school. I joined an intensive training camp aimed at the NOIP Advanced Division. Winning first prize in this competition meant direct admission to top universities. This training exposed me to talented peers—many of whom later entered prestigious universities globally and excelled in the computer science industry. I learned advanced algorithms, including graph theory and dynamic programming, and dedicated at least one hour daily to practice.\n\nAfter three months, I took the NOIP Advanced Division exam, performing exceptionally well in the first round despite the test's high difficulty. Although my score was under 40 out of 100, it ranked first in my city. However, similar to my previous experience, I did not perform as well in the second round. This setback led me to doubt my talent in competitive programming. Coupled with academic pressure from other subjects, I decided to abandon competitive programming—a decision I occasionally regret, especially seeing classmates who succeeded later.\n\n## University and Rediscovering Programming\n\nInitially, I chose Mechanical Engineering in university due to concerns about prolonged computer use causing neck strain—a reason that now seems amusing yet valid. Although I excelled in programming-related courses like C++, embedded systems, and MATLAB, I did not actively pursue competitive programming opportunities such as ACM-ICPC, which remains another regret.\n\n## Postgraduate Studies and Return to CS\n\nDuring my postgraduate studies at HKUST, my focus shifted to advanced topics like 3D printing, particularly 5-axis printing. I wrote numerous MATLAB scripts and notably produced a support-free Red Bird Sundial model—mirroring the sculpture at HKUST's entrance.\n\nAfter graduation, aiming for a Ph.D. under Professor Kai Tang but lacking funding, I joined HKUST's Department of Computer Science and Engineering as a research assistant under Professors Chi-Keung Tang, Robin Ma, and Matthew Ming-Fai Yuen. My work revolved around building a fascinating 3D garment fitting system, extensively using C++ and OpenGL. My primary role involved geometric algorithm research rather than pure software development.\n\n## Discovering LeetCode\n\nIn 2019, while seeking to enhance my computer science fundamentals, I discovered LeetCode. Like many others, I found my first problem—\"Two Sum\"—challenging but rewarding. Solving it reignited my interest in data structures and algorithms after nearly a decade-long hiatus. This marked a turning point, and I realized my passion for algorithmic problem-solving had never fully disappeared.\n",
      "code": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var v=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var i in e)r(n,i,{get:e[i],enumerable:!0})},s=(n,e,i,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of g(e))!y.call(n,t)&&t!==i&&r(n,t,{get:()=>e[t],enumerable:!(o=u(e,t))||o.enumerable});return n};var w=(n,e,i)=>(i=n!=null?m(p(n)):{},s(e||!n||!n.__esModule?r(i,\"default\",{value:n,enumerable:!0}):i,n)),I=n=>s(r({},\"__esModule\",{value:!0}),n);var l=v((M,d)=>{d.exports=_jsx_runtime});var b={};f(b,{default:()=>h,frontmatter:()=>x});var a=w(l()),x={title:\"My Journey in Data Structures, Algorithms, and LeetCode (Part I)\",date:\"2025-05-02\",lastmod:\"2025-05-02\",tags:[\"Algorithm\",\"LeetCode\",\"Personal\"],draft:!1,summary:\"Reflecting on my personal journey in data structures, algorithms, and LeetCode\\u2014from early competitions in NOIP to rediscovering my passion for programming and competitive challenges years later.\",images:[\"/static/images/twitter-card.png\"]};function c(n){let e={a:\"a\",h2:\"h2\",p:\"p\",path:\"path\",span:\"span\",svg:\"svg\",...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"introduction\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#introduction\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Introduction\"]}),(0,a.jsx)(e.p,{children:\"My journey with data structures, algorithms, and competitive programming started quite early and took several interesting turns over the years. Reflecting on these experiences helps me appreciate the growth and changes in my approach and passion.\"}),(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"early-days-and-noip\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#early-days-and-noip\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Early Days and NOIP\"]}),(0,a.jsx)(e.p,{children:\"My journey began around 2009, during secondary school. Our school organized a science festival requiring every student to pick a project. I chose the National Olympiad in Informatics in Provinces (NOIP), Basic Division. At the time, I had never studied data structures or algorithms. My first exposure came through a C programming textbook written by Haoqiang Tan, a prominent educator. Looking back ten years later, I realized the book was quite outdated and unprofessional by modern standards.\"}),(0,a.jsx)(e.p,{children:\"Fortunately, my father, who majored in computer science, quickly guided me through the basics. I still vividly remember him teaching me fundamental C syntax using a whiteboard. In my third year of secondary school, I participated in NOIP Basic Division, achieving a high score in the first round, thus qualifying for the finals in a bigger city three hours away. Despite minimal preparation, I managed a small prize in the second round\\u2014a hands-on competition where we needed to solve four problems within a limited time. Due to my lack of practice, even handling file input/output posed challenges.\"}),(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"advanced-division-and-high-school\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#advanced-division-and-high-school\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Advanced Division and High School\"]}),(0,a.jsx)(e.p,{children:\"During the summer after secondary school graduation, my father connected me with an IT teacher from my future high school. I joined an intensive training camp aimed at the NOIP Advanced Division. Winning first prize in this competition meant direct admission to top universities. This training exposed me to talented peers\\u2014many of whom later entered prestigious universities globally and excelled in the computer science industry. I learned advanced algorithms, including graph theory and dynamic programming, and dedicated at least one hour daily to practice.\"}),(0,a.jsx)(e.p,{children:\"After three months, I took the NOIP Advanced Division exam, performing exceptionally well in the first round despite the test's high difficulty. Although my score was under 40 out of 100, it ranked first in my city. However, similar to my previous experience, I did not perform as well in the second round. This setback led me to doubt my talent in competitive programming. Coupled with academic pressure from other subjects, I decided to abandon competitive programming\\u2014a decision I occasionally regret, especially seeing classmates who succeeded later.\"}),(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"university-and-rediscovering-programming\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#university-and-rediscovering-programming\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"University and Rediscovering Programming\"]}),(0,a.jsx)(e.p,{children:\"Initially, I chose Mechanical Engineering in university due to concerns about prolonged computer use causing neck strain\\u2014a reason that now seems amusing yet valid. Although I excelled in programming-related courses like C++, embedded systems, and MATLAB, I did not actively pursue competitive programming opportunities such as ACM-ICPC, which remains another regret.\"}),(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"postgraduate-studies-and-return-to-cs\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#postgraduate-studies-and-return-to-cs\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Postgraduate Studies and Return to CS\"]}),(0,a.jsx)(e.p,{children:\"During my postgraduate studies at HKUST, my focus shifted to advanced topics like 3D printing, particularly 5-axis printing. I wrote numerous MATLAB scripts and notably produced a support-free Red Bird Sundial model\\u2014mirroring the sculpture at HKUST's entrance.\"}),(0,a.jsx)(e.p,{children:\"After graduation, aiming for a Ph.D. under Professor Kai Tang but lacking funding, I joined HKUST's Department of Computer Science and Engineering as a research assistant under Professors Chi-Keung Tang, Robin Ma, and Matthew Ming-Fai Yuen. My work revolved around building a fascinating 3D garment fitting system, extensively using C++ and OpenGL. My primary role involved geometric algorithm research rather than pure software development.\"}),(0,a.jsxs)(e.h2,{className:\"content-header\",id:\"discovering-leetcode\",children:[(0,a.jsx)(e.a,{\"aria-hidden\":\"true\",href:\"#discovering-leetcode\",tabIndex:\"-1\",children:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{className:\"content-header-link\",children:(0,a.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,a.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,a.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Discovering LeetCode\"]}),(0,a.jsx)(e.p,{children:'In 2019, while seeking to enhance my computer science fundamentals, I discovered LeetCode. Like many others, I found my first problem\\u2014\"Two Sum\"\\u2014challenging but rewarding. Solving it reignited my interest in data structures and algorithms after nearly a decade-long hiatus. This marked a turning point, and I realized my passion for algorithmic problem-solving had never fully disappeared.'})]})}function h(n={}){let{wrapper:e}=n.components||{};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}return I(b);})();\n;return Component;"
    },
    "_id": "blog/my-journey-in-data-structures-algorithm-leetcode-p1.mdx",
    "_raw": {
      "sourceFilePath": "blog/my-journey-in-data-structures-algorithm-leetcode-p1.mdx",
      "sourceFileName": "my-journey-in-data-structures-algorithm-leetcode-p1.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/my-journey-in-data-structures-algorithm-leetcode-p1"
    },
    "type": "Blog",
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.085,
      "time": 185100,
      "words": 617
    },
    "slug": "my-journey-in-data-structures-algorithm-leetcode-p1",
    "path": "blog/my-journey-in-data-structures-algorithm-leetcode-p1",
    "filePath": "blog/my-journey-in-data-structures-algorithm-leetcode-p1.mdx",
    "toc": [
      {
        "value": "Introduction",
        "url": "#introduction",
        "depth": 2
      },
      {
        "value": "Early Days and NOIP",
        "url": "#early-days-and-noip",
        "depth": 2
      },
      {
        "value": "Advanced Division and High School",
        "url": "#advanced-division-and-high-school",
        "depth": 2
      },
      {
        "value": "University and Rediscovering Programming",
        "url": "#university-and-rediscovering-programming",
        "depth": 2
      },
      {
        "value": "Postgraduate Studies and Return to CS",
        "url": "#postgraduate-studies-and-return-to-cs",
        "depth": 2
      },
      {
        "value": "Discovering LeetCode",
        "url": "#discovering-leetcode",
        "depth": 2
      }
    ],
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "My Journey in Data Structures, Algorithms, and LeetCode (Part I)",
      "datePublished": "2025-05-02T00:00:00.000Z",
      "dateModified": "2025-05-02T00:00:00.000Z",
      "description": "Reflecting on my personal journey in data structures, algorithms, and LeetCode—from early competitions in NOIP to rediscovering my passion for programming and competitive challenges years later.",
      "image": "/static/images/twitter-card.png",
      "url": "https://tailwind-nextjs-starter-blog.vercel.app/blog/my-journey-in-data-structures-algorithm-leetcode-p1"
    }
  },
  {
    "title": "My Journey in Data Structures, Algorithms, and LeetCode (Part II)",
    "date": "2025-05-03T00:00:00.000Z",
    "tags": [
      "Algorithm",
      "LeetCode",
      "Personal",
      "Work"
    ],
    "lastmod": "2025-05-03T00:00:00.000Z",
    "draft": false,
    "summary": "Continuing my journey in data structures, algorithms, and LeetCode, from graduate studies and job hunting to rekindling a passion for algorithmic problem-solving and competitive programming.",
    "images": [
      "/static/images/twitter-card.png"
    ],
    "body": {
      "raw": "\n## Graduate Studies and Rekindling Interest\n\nIn 2019, my engagement with LeetCode was limited due to applications for a second master's degree. At that point, I shifted my academic interest from hardware-focused research to software and artificial intelligence. I was accepted into the Master of Science in Artificial Intelligence program at Nanyang Technological University (NTU).\n\nWith the onset of the Covid-19 pandemic, my courses moved online. Considering future job opportunities, I realized data structures and algorithms would be essential skills. Thus, I returned to LeetCode, predominantly solving problems in C++, despite primarily using Python for coursework. Initially, I followed a recommended [problem list](https://zxi.mytechroad.com/blog/leetcode-problem-categories/), which proved quite challenging at first. Nonetheless, I solved around 300 LeetCode problems that year and participated in several contests. Notably, I successfully completed all four questions in Weekly Contest 213—a memorable milestone. Additionally, I participated in Google Kick Start contests, though my performance highlighted the need for further practic.\n\n## Transition to Java and Professional Career\n\nAfter graduating from NTU, I secured a job in Singapore, where my professional work required proficiency in Java. Consequently, I transitioned from C++ to Java. During 2021 and early 2022, my LeetCode practice decreased significantly as I focused primarily on AWS technologies and job-related responsibilities. My practice was mainly limited to reinforcing my familiarity with Java syntax and fundamental problem-solving techniques.\n\n## Rediscovering Algorithmic Passion\n\nIn late 2022, my passion for algorithms reignited, driving me back to LeetCode. This time, I began with the resources from [labuladong](https://labuladong.online/algo/home/), which helped me quickly regain momentum. Throughout 2023, I actively participated in contests and achieved notable rankings. My renewed enthusiasm carried into 2024 and 2025, initially motivated by interview preparation but evolving into genuine personal interest. Currently, I follow an excellent curated [problem list](https://leetcode.cn/discuss/post/3578981/ti-dan-hua-dong-chuang-kou-ding-chang-bu-rzz7/) by \"灵神,\" a top competitive programmer and teacher in China. To date, I have solved over 800 problems. Yet, it's not merely the number that matters, but rather the insights and deeper understanding I've gained through this rigorous journey. Looking ahead, I am considering exploring platforms like Codeforces once I feel confident tackling most of LeetCode's hard problems.\n\n<div className=\"w-full overflow-hidden\">\n  <img src=\"/static/images/algorithm/leetcode_profile.png\" alt=\"Maple\" className=\"h-auto w-full\" />\n</div>\n\n## Important Algorithmic topics\n\nThroughout my journey, I have found certain topics particularly important (try to keep updating):\n\n- **For Interviews:**\n\n  - Two Pointers\n  - Depth-First Search (DFS)\n  - Breadth-First Search (BFS)\n  - Trees\n  - Linked Lists\n  - Graph Theory\n  - Basic Data Structures (Hash Map, Hash Set)\n  - Binary Search\n\n  (Future interviews might include even more challenging topics—I've already encountered problems involving the **Hierholzer** algorithm!)\n\n- **For LeetCode Contests:**\n  - Dynamic Programming (like Digit DP)\n  - DFS and BFS\n  - Advanced Graph Algorithms (like Dijkstra, Floyd)\n  - Mathematics (with many complex subtopics)\n  - Greedy Algorithms\n  - String Algorithms (like KMP, Z-function)\n\n## Conclusion\n\nMy continuous exploration of algorithms and data structures has significantly shaped my career path and personal interests. Although my achievements so far fill me with pride, I know I’m still at the very beginning of this algorithmic journey. Reflecting on this motivates me to keep learning and growing, and to ultimately fulfill the aspirations I set for myself back in high school. The road ahead is exciting and full of potential, and I look forward to sharing more insights and experiences along the way.\n",
      "code": "var Component=(()=>{var m=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),w=(a,e)=>{for(var n in e)r(a,n,{get:e[n],enumerable:!0})},o=(a,e,n,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of p(e))!f.call(a,t)&&t!==n&&r(a,t,{get:()=>e[t],enumerable:!(l=g(e,t))||l.enumerable});return a};var v=(a,e,n)=>(n=a!=null?m(u(a)):{},o(e||!a||!a.__esModule?r(n,\"default\",{value:a,enumerable:!0}):n,a)),b=a=>o(r({},\"__esModule\",{value:!0}),a);var d=y((C,s)=>{s.exports=_jsx_runtime});var k={};w(k,{default:()=>h,frontmatter:()=>I});var i=v(d()),I={title:\"My Journey in Data Structures, Algorithms, and LeetCode (Part II)\",date:\"2025-05-03\",lastmod:\"2025-05-03\",tags:[\"Algorithm\",\"LeetCode\",\"Personal\",\"Work\"],draft:!1,summary:\"Continuing my journey in data structures, algorithms, and LeetCode, from graduate studies and job hunting to rekindling a passion for algorithmic problem-solving and competitive programming.\",images:[\"/static/images/twitter-card.png\"]};function c(a){let e={a:\"a\",h2:\"h2\",li:\"li\",p:\"p\",path:\"path\",span:\"span\",strong:\"strong\",svg:\"svg\",ul:\"ul\",...a.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h2,{className:\"content-header\",id:\"graduate-studies-and-rekindling-interest\",children:[(0,i.jsx)(e.a,{href:\"#graduate-studies-and-rekindling-interest\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{className:\"content-header-link\",children:(0,i.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,i.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,i.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Graduate Studies and Rekindling Interest\"]}),(0,i.jsx)(e.p,{children:\"In 2019, my engagement with LeetCode was limited due to applications for a second master's degree. At that point, I shifted my academic interest from hardware-focused research to software and artificial intelligence. I was accepted into the Master of Science in Artificial Intelligence program at Nanyang Technological University (NTU).\"}),(0,i.jsxs)(e.p,{children:[\"With the onset of the Covid-19 pandemic, my courses moved online. Considering future job opportunities, I realized data structures and algorithms would be essential skills. Thus, I returned to LeetCode, predominantly solving problems in C++, despite primarily using Python for coursework. Initially, I followed a recommended \",(0,i.jsx)(e.a,{href:\"https://zxi.mytechroad.com/blog/leetcode-problem-categories/\",children:\"problem list\"}),\", which proved quite challenging at first. Nonetheless, I solved around 300 LeetCode problems that year and participated in several contests. Notably, I successfully completed all four questions in Weekly Contest 213\\u2014a memorable milestone. Additionally, I participated in Google Kick Start contests, though my performance highlighted the need for further practic.\"]}),(0,i.jsxs)(e.h2,{className:\"content-header\",id:\"transition-to-java-and-professional-career\",children:[(0,i.jsx)(e.a,{href:\"#transition-to-java-and-professional-career\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{className:\"content-header-link\",children:(0,i.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,i.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,i.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Transition to Java and Professional Career\"]}),(0,i.jsx)(e.p,{children:\"After graduating from NTU, I secured a job in Singapore, where my professional work required proficiency in Java. Consequently, I transitioned from C++ to Java. During 2021 and early 2022, my LeetCode practice decreased significantly as I focused primarily on AWS technologies and job-related responsibilities. My practice was mainly limited to reinforcing my familiarity with Java syntax and fundamental problem-solving techniques.\"}),(0,i.jsxs)(e.h2,{className:\"content-header\",id:\"rediscovering-algorithmic-passion\",children:[(0,i.jsx)(e.a,{href:\"#rediscovering-algorithmic-passion\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{className:\"content-header-link\",children:(0,i.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,i.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,i.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Rediscovering Algorithmic Passion\"]}),(0,i.jsxs)(e.p,{children:[\"In late 2022, my passion for algorithms reignited, driving me back to LeetCode. This time, I began with the resources from \",(0,i.jsx)(e.a,{href:\"https://labuladong.online/algo/home/\",children:\"labuladong\"}),\", which helped me quickly regain momentum. Throughout 2023, I actively participated in contests and achieved notable rankings. My renewed enthusiasm carried into 2024 and 2025, initially motivated by interview preparation but evolving into genuine personal interest. Currently, I follow an excellent curated \",(0,i.jsx)(e.a,{href:\"https://leetcode.cn/discuss/post/3578981/ti-dan-hua-dong-chuang-kou-ding-chang-bu-rzz7/\",children:\"problem list\"}),` by \"\\u7075\\u795E,\" a top competitive programmer and teacher in China. To date, I have solved over 800 problems. Yet, it's not merely the number that matters, but rather the insights and deeper understanding I've gained through this rigorous journey. Looking ahead, I am considering exploring platforms like Codeforces once I feel confident tackling most of LeetCode's hard problems.`]}),(0,i.jsx)(\"div\",{className:\"w-full overflow-hidden\",children:(0,i.jsx)(\"img\",{src:\"/static/images/algorithm/leetcode_profile.png\",alt:\"Maple\",className:\"h-auto w-full\"})}),(0,i.jsxs)(e.h2,{className:\"content-header\",id:\"important-algorithmic-topics\",children:[(0,i.jsx)(e.a,{href:\"#important-algorithmic-topics\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{className:\"content-header-link\",children:(0,i.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,i.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,i.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Important Algorithmic topics\"]}),(0,i.jsx)(e.p,{children:\"Throughout my journey, I have found certain topics particularly important (try to keep updating):\"}),(0,i.jsxs)(e.ul,{children:[(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:\"For Interviews:\"})}),(0,i.jsxs)(e.ul,{children:[(0,i.jsx)(e.li,{children:\"Two Pointers\"}),(0,i.jsx)(e.li,{children:\"Depth-First Search (DFS)\"}),(0,i.jsx)(e.li,{children:\"Breadth-First Search (BFS)\"}),(0,i.jsx)(e.li,{children:\"Trees\"}),(0,i.jsx)(e.li,{children:\"Linked Lists\"}),(0,i.jsx)(e.li,{children:\"Graph Theory\"}),(0,i.jsx)(e.li,{children:\"Basic Data Structures (Hash Map, Hash Set)\"}),(0,i.jsx)(e.li,{children:\"Binary Search\"})]}),(0,i.jsxs)(e.p,{children:[\"(Future interviews might include even more challenging topics\\u2014I've already encountered problems involving the \",(0,i.jsx)(e.strong,{children:\"Hierholzer\"}),\" algorithm!)\"]})]}),(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:\"For LeetCode Contests:\"})}),(0,i.jsxs)(e.ul,{children:[(0,i.jsx)(e.li,{children:\"Dynamic Programming (like Digit DP)\"}),(0,i.jsx)(e.li,{children:\"DFS and BFS\"}),(0,i.jsx)(e.li,{children:\"Advanced Graph Algorithms (like Dijkstra, Floyd)\"}),(0,i.jsx)(e.li,{children:\"Mathematics (with many complex subtopics)\"}),(0,i.jsx)(e.li,{children:\"Greedy Algorithms\"}),(0,i.jsx)(e.li,{children:\"String Algorithms (like KMP, Z-function)\"})]})]})]}),(0,i.jsxs)(e.h2,{className:\"content-header\",id:\"conclusion\",children:[(0,i.jsx)(e.a,{href:\"#conclusion\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(e.span,{className:\"content-header-link\",children:(0,i.jsxs)(e.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,i.jsx)(e.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,i.jsx)(e.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Conclusion\"]}),(0,i.jsx)(e.p,{children:\"My continuous exploration of algorithms and data structures has significantly shaped my career path and personal interests. Although my achievements so far fill me with pride, I know I\\u2019m still at the very beginning of this algorithmic journey. Reflecting on this motivates me to keep learning and growing, and to ultimately fulfill the aspirations I set for myself back in high school. The road ahead is exciting and full of potential, and I look forward to sharing more insights and experiences along the way.\"})]})}function h(a={}){let{wrapper:e}=a.components||{};return e?(0,i.jsx)(e,{...a,children:(0,i.jsx)(c,{...a})}):c(a)}return b(k);})();\n;return Component;"
    },
    "_id": "blog/my-journey-in-data-structures-algorithm-leetcode-p2.mdx",
    "_raw": {
      "sourceFilePath": "blog/my-journey-in-data-structures-algorithm-leetcode-p2.mdx",
      "sourceFileName": "my-journey-in-data-structures-algorithm-leetcode-p2.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/my-journey-in-data-structures-algorithm-leetcode-p2"
    },
    "type": "Blog",
    "readingTime": {
      "text": "3 min read",
      "minutes": 2.745,
      "time": 164700,
      "words": 549
    },
    "slug": "my-journey-in-data-structures-algorithm-leetcode-p2",
    "path": "blog/my-journey-in-data-structures-algorithm-leetcode-p2",
    "filePath": "blog/my-journey-in-data-structures-algorithm-leetcode-p2.mdx",
    "toc": [
      {
        "value": "Graduate Studies and Rekindling Interest",
        "url": "#graduate-studies-and-rekindling-interest",
        "depth": 2
      },
      {
        "value": "Transition to Java and Professional Career",
        "url": "#transition-to-java-and-professional-career",
        "depth": 2
      },
      {
        "value": "Rediscovering Algorithmic Passion",
        "url": "#rediscovering-algorithmic-passion",
        "depth": 2
      },
      {
        "value": "Important Algorithmic topics",
        "url": "#important-algorithmic-topics",
        "depth": 2
      },
      {
        "value": "Conclusion",
        "url": "#conclusion",
        "depth": 2
      }
    ],
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "My Journey in Data Structures, Algorithms, and LeetCode (Part II)",
      "datePublished": "2025-05-03T00:00:00.000Z",
      "dateModified": "2025-05-03T00:00:00.000Z",
      "description": "Continuing my journey in data structures, algorithms, and LeetCode, from graduate studies and job hunting to rekindling a passion for algorithmic problem-solving and competitive programming.",
      "image": "/static/images/twitter-card.png",
      "url": "https://tailwind-nextjs-starter-blog.vercel.app/blog/my-journey-in-data-structures-algorithm-leetcode-p2"
    }
  },
  {
    "title": "My Software Engineer Interview Experience (I)",
    "date": "2025-05-14T00:00:00.000Z",
    "tags": [
      "Interview",
      "Algorithm",
      "Singapore",
      "Personal"
    ],
    "lastmod": "2025-05-14T00:00:00.000Z",
    "draft": false,
    "summary": "Mapping my SDE interview journey—screens, coding, design, and behavioral—with essential tips and lessons.",
    "images": [
      "/static/images/twitter-card.png"
    ],
    "body": {
      "raw": "\nI've recently (maybe not that recently lol) interviewed with several companies in Singapore, and I'd like to share some of my experiences (currently most on LeetCode style questions) and insights gained from these interviews. I’ll continue to update this series.\n\n**Disclaimer:** I haven't signed any NDAs, and I will not mention any specific company names.\n\nI will start with a prominent Chinese software company.\n\n## Round 1: Algorithm Test\n\nThe first round consisted of three algorithm problems. I don't recall the exact questions, but they weren't overly challenging. The last question involved dynamic programming (DP) with stringent test cases, making it difficult to pass all of them. I successfully solved about 70% of the cases, which allowed me to advance to the next round.\n\n## Round 2: Technical Interview\n\nThe second round focused on technical questions based on my professional experience. Here are some highlights:\n\n1. **What's the iteration cycle of your project (e.g., monthly, bi-monthly)?**\n2. **How do you deploy applications on AWS and utilize serverless architecture?**\n3. **Why do you use Elasticsearch, and how do you ensure consistency between Elasticsearch and the database?**\n4. **How do you handle duplicate message consumption in message queues?**\n5. **How do you resolve Maven JAR dependency conflicts?**\n\nThese questions were fairly standard. For question 3 specifically, I explained that the solution depends heavily on the particular use case. And I want to share a bit of question 5, I believe this is a bit common in real development:\n\n### Understanding and Resolving Maven Dependency Conflicts\n\nMaven picks one version per `groupId:artifactId` using:\n\n- **Shortest-Path Priority:** selects the version with the fewest hops.  \n- **Declaration-Order Priority:** if tied, the earlier `pom.xml` entry wins.\n\n**Example:**\n```text\nDependency path 1: A → B → C → X(1.5)  // distance = 3\nDependency path 2: A → D → X(1.0)     // distance = 2\n```\n\n**Issue:** If module C needs X 1.5 but Maven picks X 1.0, you’ll see `NoClassDefFoundError` or `NoSuchMethodError`.\n\n**Solutions:**\n\n1. **Upgrade the direct parent** (e.g., D) to a version that brings in X 1.5.\n2. **Exclude the older X**: Generally, when resolving dependency conflicts, we prioritize the higher version, because most JARs maintain backward compatibility when upgraded:\n   ```xml\n    <dependency>\n        ......\n        <exclusions>\n        <exclusion>\n            <artifactId>x</artifactId>\n            <groupId>org.apache.x</groupId>\n        </exclusion>\n        </exclusions>\n    </dependency>\n    ```\n\nAdditionally, there was one coding problem: [LeetCode 179: Largest Number](https://leetcode.com/problems/largest-number/description/). I found this question particularly interesting and suitable for interviews. The problem statement is:\n\n> Given a list of non-negative integers `nums`, arrange them to form the largest possible number and return it as a string.\n\nInitially, I got stuck for about 10 minutes, considering a monotonic stack and greedy approach. However, the key insight is straightforward yet subtle: for two numbers `a` and `b`, `a` should come before `b` if the concatenation `ab` is greater than `ba`. While this seems intuitively greedy, the rigorous proof is nuanced. A comprehensive explanation can be found [here](https://leetcode.cn/problems/largest-number/solutions/716725/gong-shui-san-xie-noxiang-xin-ke-xue-xi-vn86e/) (Chinese but this is the best proof I've seen).\n\nHere's my final solution:\n\n```java\nclass Solution {\n    public String largestNumber(int[] nums) {\n        int n = nums.length;\n        Integer[] converted = new Integer[n];\n        for (int i = 0; i < n; i++) {\n            converted[i] = nums[i];\n        }\n\n        Arrays.sort(converted, (a, b) -> {\n            String s1 = String.valueOf(a) + String.valueOf(b);\n            String s2 = String.valueOf(b) + String.valueOf(a);\n            return s2.compareTo(s1);\n        });\n\n        if (converted[0] == 0) {\n            return \"0\";\n        }\n\n        StringBuilder ans = new StringBuilder();\n        for (int num : converted) {\n            ans.append(num);\n        }\n\n        return ans.toString();\n    }\n}\n```\n\n## Round 3: Behavioral Interview\n\n- **Focus:** Common behavioral questions  \n- **Key Question:** “Why did you change your major from Mechanical Engineering to Computer Science?”  \n- **Frequency:** Asked in about 80% of my interviews  \n- **My Typical Responses:**  \n  1. **Interest:** I participated in competitive programming during high school, developing a keen interest in computer science early on. Although I initially chose Mechanical Engineering for other reasons, my passion for computing remained strong.  \n  2. **Natural Transition:** In Mechanical Engineering, I often worked with CAD and programmed in MATLAB and C++ on various projects, which made transitioning to software development smooth.  \n  3. **From AI to Development:** While my Master’s focused on AI, I realized I needed more hands-on software development and implementation experience before diving deeper into AI research.  \n\nIn the end, I successfully cleared all of the interviews.\n\n## Lessons Learned\n\n- **Practice coding under time pressure.** Sometimes can get stuck in a non-hard problem, take it easy.   \n- **Craft a compelling personal narrative.** Frame your background changes as a journey of passion and growth.  ",
      "code": "var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var g=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),w=(a,n)=>{for(var s in n)l(a,s,{get:n[s],enumerable:!0})},i=(a,n,s,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of u(n))!k.call(a,c)&&c!==s&&l(a,c,{get:()=>n[c],enumerable:!(t=m(n,c))||t.enumerable});return a};var f=(a,n,s)=>(s=a!=null?p(N(a)):{},i(n||!a||!a.__esModule?l(s,\"default\",{value:a,enumerable:!0}):s,a)),y=a=>i(l({},\"__esModule\",{value:!0}),a);var r=g((I,o)=>{o.exports=_jsx_runtime});var b={};w(b,{default:()=>h,frontmatter:()=>v});var e=f(r()),v={title:\"My Software Engineer Interview Experience (I)\",date:\"2025-05-14\",lastmod:\"2025-05-14\",tags:[\"Interview\",\"Algorithm\",\"Singapore\",\"Personal\"],draft:!1,summary:\"Mapping my SDE interview journey\\u2014screens, coding, design, and behavioral\\u2014with essential tips and lessons.\",images:[\"/static/images/twitter-card.png\"]};function d(a){let n={a:\"a\",blockquote:\"blockquote\",code:\"code\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",path:\"path\",pre:\"pre\",span:\"span\",strong:\"strong\",svg:\"svg\",ul:\"ul\",...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"I've recently (maybe not that recently lol) interviewed with several companies in Singapore, and I'd like to share some of my experiences (currently most on LeetCode style questions) and insights gained from these interviews. I\\u2019ll continue to update this series.\"}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Disclaimer:\"}),\" I haven't signed any NDAs, and I will not mention any specific company names.\"]}),(0,e.jsx)(n.p,{children:\"I will start with a prominent Chinese software company.\"}),(0,e.jsxs)(n.h2,{className:\"content-header\",id:\"round-1-algorithm-test\",children:[(0,e.jsx)(n.a,{href:\"#round-1-algorithm-test\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(n.span,{className:\"content-header-link\",children:(0,e.jsxs)(n.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,e.jsx)(n.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,e.jsx)(n.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Round 1: Algorithm Test\"]}),(0,e.jsx)(n.p,{children:\"The first round consisted of three algorithm problems. I don't recall the exact questions, but they weren't overly challenging. The last question involved dynamic programming (DP) with stringent test cases, making it difficult to pass all of them. I successfully solved about 70% of the cases, which allowed me to advance to the next round.\"}),(0,e.jsxs)(n.h2,{className:\"content-header\",id:\"round-2-technical-interview\",children:[(0,e.jsx)(n.a,{href:\"#round-2-technical-interview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(n.span,{className:\"content-header-link\",children:(0,e.jsxs)(n.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,e.jsx)(n.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,e.jsx)(n.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Round 2: Technical Interview\"]}),(0,e.jsx)(n.p,{children:\"The second round focused on technical questions based on my professional experience. Here are some highlights:\"}),(0,e.jsxs)(n.ol,{children:[(0,e.jsx)(n.li,{children:(0,e.jsx)(n.strong,{children:\"What's the iteration cycle of your project (e.g., monthly, bi-monthly)?\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.strong,{children:\"How do you deploy applications on AWS and utilize serverless architecture?\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.strong,{children:\"Why do you use Elasticsearch, and how do you ensure consistency between Elasticsearch and the database?\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.strong,{children:\"How do you handle duplicate message consumption in message queues?\"})}),(0,e.jsx)(n.li,{children:(0,e.jsx)(n.strong,{children:\"How do you resolve Maven JAR dependency conflicts?\"})})]}),(0,e.jsx)(n.p,{children:\"These questions were fairly standard. For question 3 specifically, I explained that the solution depends heavily on the particular use case. And I want to share a bit of question 5, I believe this is a bit common in real development:\"}),(0,e.jsxs)(n.h3,{className:\"content-header\",id:\"understanding-and-resolving-maven-dependency-conflicts\",children:[(0,e.jsx)(n.a,{href:\"#understanding-and-resolving-maven-dependency-conflicts\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(n.span,{className:\"content-header-link\",children:(0,e.jsxs)(n.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,e.jsx)(n.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,e.jsx)(n.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Understanding and Resolving Maven Dependency Conflicts\"]}),(0,e.jsxs)(n.p,{children:[\"Maven picks one version per \",(0,e.jsx)(n.code,{children:\"groupId:artifactId\"}),\" using:\"]}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Shortest-Path Priority:\"}),\" selects the version with the fewest hops.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Declaration-Order Priority:\"}),\" if tied, the earlier \",(0,e.jsx)(n.code,{children:\"pom.xml\"}),\" entry wins.\"]})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Example:\"})}),(0,e.jsx)(n.pre,{className:\"language-text\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-text\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`Dependency path 1: A \\u2192 B \\u2192 C \\u2192 X(1.5)  // distance = 3\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`Dependency path 2: A \\u2192 D \\u2192 X(1.0)     // distance = 2\n`})]})}),(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Issue:\"}),\" If module C needs X 1.5 but Maven picks X 1.0, you\\u2019ll see \",(0,e.jsx)(n.code,{children:\"NoClassDefFoundError\"}),\" or \",(0,e.jsx)(n.code,{children:\"NoSuchMethodError\"}),\".\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"Solutions:\"})}),(0,e.jsxs)(n.ol,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Upgrade the direct parent\"}),\" (e.g., D) to a version that brings in X 1.5.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Exclude the older X\"}),\": Generally, when resolving dependency conflicts, we prioritize the higher version, because most JARs maintain backward compatibility when upgraded:\",(0,e.jsx)(n.pre,{className:\"language-xml\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-xml\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"dependency\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`     ......\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"exclusions\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"exclusion\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"         \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"artifactId\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\"x\",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"artifactId\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"         \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"<\"}),\"groupId\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),\"org.apache.x\",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"groupId\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"exclusion\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"     \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"exclusions\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\" \",(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsxs)(n.span,{className:\"token tag\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"</\"}),\"dependency\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\">\"})]}),`\n`]})]})})]})]}),(0,e.jsxs)(n.p,{children:[\"Additionally, there was one coding problem: \",(0,e.jsx)(n.a,{href:\"https://leetcode.com/problems/largest-number/description/\",children:\"LeetCode 179: Largest Number\"}),\". I found this question particularly interesting and suitable for interviews. The problem statement is:\"]}),(0,e.jsx)(n.blockquote,{children:(0,e.jsxs)(n.p,{children:[\"Given a list of non-negative integers \",(0,e.jsx)(n.code,{children:\"nums\"}),\", arrange them to form the largest possible number and return it as a string.\"]})}),(0,e.jsxs)(n.p,{children:[\"Initially, I got stuck for about 10 minutes, considering a monotonic stack and greedy approach. However, the key insight is straightforward yet subtle: for two numbers \",(0,e.jsx)(n.code,{children:\"a\"}),\" and \",(0,e.jsx)(n.code,{children:\"b\"}),\", \",(0,e.jsx)(n.code,{children:\"a\"}),\" should come before \",(0,e.jsx)(n.code,{children:\"b\"}),\" if the concatenation \",(0,e.jsx)(n.code,{children:\"ab\"}),\" is greater than \",(0,e.jsx)(n.code,{children:\"ba\"}),\". While this seems intuitively greedy, the rigorous proof is nuanced. A comprehensive explanation can be found \",(0,e.jsx)(n.a,{href:\"https://leetcode.cn/problems/largest-number/solutions/716725/gong-shui-san-xie-noxiang-xin-ke-xue-xi-vn86e/\",children:\"here\"}),\" (Chinese but this is the best proof I've seen).\"]}),(0,e.jsx)(n.p,{children:\"Here's my final solution:\"}),(0,e.jsx)(n.pre,{className:\"language-java\",children:(0,e.jsxs)(n.code,{className:\"code-highlight language-java\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"class\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Solution\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"public\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"largestNumber\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" nums\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),\" n \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" nums\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"length\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Integer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" converted \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Integer\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"n\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),\" i \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" i \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"<\"}),\" n\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),\" i\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"++\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            converted\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"i\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" nums\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),\"i\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"Arrays\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"sort\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"converted\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"a\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" b\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"->\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),\" s1 \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"valueOf\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"a\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"valueOf\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"b\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),\" s2 \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"valueOf\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"b\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"+\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"String\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"valueOf\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"a\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" s2\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"compareTo\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"s1\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"converted\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"0\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"StringBuilder\"}),\" ans \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"new\"}),\" \",(0,e.jsx)(n.span,{className:\"token class-name\",children:\"StringBuilder\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token keyword\",children:\"int\"}),\" num \",(0,e.jsx)(n.span,{className:\"token operator\",children:\":\"}),\" converted\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            ans\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"append\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"num\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" ans\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(n.span,{className:\"token function\",children:\"toString\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\";\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]})]})}),(0,e.jsxs)(n.h2,{className:\"content-header\",id:\"round-3-behavioral-interview\",children:[(0,e.jsx)(n.a,{href:\"#round-3-behavioral-interview\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(n.span,{className:\"content-header-link\",children:(0,e.jsxs)(n.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,e.jsx)(n.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,e.jsx)(n.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Round 3: Behavioral Interview\"]}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Focus:\"}),\" Common behavioral questions\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Key Question:\"}),\" \\u201CWhy did you change your major from Mechanical Engineering to Computer Science?\\u201D\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Frequency:\"}),\" Asked in about 80% of my interviews\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"My Typical Responses:\"}),(0,e.jsxs)(n.ol,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Interest:\"}),\" I participated in competitive programming during high school, developing a keen interest in computer science early on. Although I initially chose Mechanical Engineering for other reasons, my passion for computing remained strong.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Natural Transition:\"}),\" In Mechanical Engineering, I often worked with CAD and programmed in MATLAB and C++ on various projects, which made transitioning to software development smooth.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"From AI to Development:\"}),\" While my Master\\u2019s focused on AI, I realized I needed more hands-on software development and implementation experience before diving deeper into AI research.\"]})]})]})]}),(0,e.jsx)(n.p,{children:\"In the end, I successfully cleared all of the interviews.\"}),(0,e.jsxs)(n.h2,{className:\"content-header\",id:\"lessons-learned\",children:[(0,e.jsx)(n.a,{href:\"#lessons-learned\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(e.Fragment,{children:(0,e.jsx)(n.span,{className:\"content-header-link\",children:(0,e.jsxs)(n.svg,{className:\"h-5 linkicon w-5\",fill:\"currentColor\",viewBox:\"0 0 20 20\",xmlns:\"http://www.w3.org/2000/svg\",children:[(0,e.jsx)(n.path,{d:\"M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z\"}),(0,e.jsx)(n.path,{d:\"M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z\"})]})})})}),\"Lessons Learned\"]}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Practice coding under time pressure.\"}),\" Sometimes can get stuck in a non-hard problem, take it easy.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Craft a compelling personal narrative.\"}),\" Frame your background changes as a journey of passion and growth.\"]})]})]})}function h(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,{...a,children:(0,e.jsx)(d,{...a})}):d(a)}return y(b);})();\n;return Component;"
    },
    "_id": "blog/my-software-engineer-interview-experience-I.mdx",
    "_raw": {
      "sourceFilePath": "blog/my-software-engineer-interview-experience-I.mdx",
      "sourceFileName": "my-software-engineer-interview-experience-I.mdx",
      "sourceFileDir": "blog",
      "contentType": "mdx",
      "flattenedPath": "blog/my-software-engineer-interview-experience-I"
    },
    "type": "Blog",
    "readingTime": {
      "text": "4 min read",
      "minutes": 3.73,
      "time": 223800,
      "words": 746
    },
    "slug": "my-software-engineer-interview-experience-I",
    "path": "blog/my-software-engineer-interview-experience-I",
    "filePath": "blog/my-software-engineer-interview-experience-I.mdx",
    "toc": [
      {
        "value": "Round 1: Algorithm Test",
        "url": "#round-1-algorithm-test",
        "depth": 2
      },
      {
        "value": "Round 2: Technical Interview",
        "url": "#round-2-technical-interview",
        "depth": 2
      },
      {
        "value": "Understanding and Resolving Maven Dependency Conflicts",
        "url": "#understanding-and-resolving-maven-dependency-conflicts",
        "depth": 3
      },
      {
        "value": "Round 3: Behavioral Interview",
        "url": "#round-3-behavioral-interview",
        "depth": 2
      },
      {
        "value": "Lessons Learned",
        "url": "#lessons-learned",
        "depth": 2
      }
    ],
    "structuredData": {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": "My Software Engineer Interview Experience (I)",
      "datePublished": "2025-05-14T00:00:00.000Z",
      "dateModified": "2025-05-14T00:00:00.000Z",
      "description": "Mapping my SDE interview journey—screens, coding, design, and behavioral—with essential tips and lessons.",
      "image": "/static/images/twitter-card.png",
      "url": "https://tailwind-nextjs-starter-blog.vercel.app/blog/my-software-engineer-interview-experience-I"
    }
  }
]